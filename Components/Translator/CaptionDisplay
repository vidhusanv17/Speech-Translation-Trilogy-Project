import React, { useRef, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { MessageSquare, Languages, Sparkles } from "lucide-react";

export default function CaptionDisplay({ 
  interimText, 
  translatedText, 
  captionHistory,
  isDarkMode,
  isListening
}) {
  const scrollRef = useRef(null);

  useEffect(() => {
    if (scrollRef.current) {
      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
    }
  }, [captionHistory, translatedText]);

  return (
    <div className="grid md:grid-cols-2 gap-6">
      {/* Original Speech */}
      <motion.div
        initial={{ opacity: 0, x: -30 }}
        animate={{ opacity: 1, x: 0 }}
        transition={{ duration: 0.5, delay: 0.2 }}
        className={`rounded-3xl backdrop-blur-2xl border overflow-hidden ${
          isDarkMode 
            ? 'bg-white/5 border-white/10 shadow-2xl shadow-blue-500/10' 
            : 'bg-white/60 border-blue-200/30 shadow-2xl shadow-blue-500/20'
        }`}
      >
        <div className={`p-6 border-b ${
          isDarkMode ? 'border-white/10' : 'border-blue-200/30'
        }`}>
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className={`p-2.5 rounded-xl ${
                isDarkMode 
                  ? 'bg-blue-500/20 ring-1 ring-blue-500/30' 
                  : 'bg-blue-100 ring-1 ring-blue-300/50'
              }`}>
                <MessageSquare className={`w-5 h-5 ${
                  isDarkMode ? 'text-blue-400' : 'text-blue-600'
                }`} />
              </div>
              <h3 className={`text-lg font-semibold ${
                isDarkMode ? 'text-white' : 'text-slate-900'
              }`}>
                Original Speech
              </h3>
            </div>
            {isListening && (
              <motion.div
                animate={{ scale: [1, 1.2, 1], opacity: [0.5, 1, 0.5] }}
                transition={{ duration: 1.5, repeat: Infinity }}
                className="flex items-center gap-2"
              >
                <div className="w-2 h-2 bg-red-500 rounded-full" />
                <span className={`text-xs font-medium ${
                  isDarkMode ? 'text-red-400' : 'text-red-600'
                }`}>
                  LIVE
                </span>
              </motion.div>
            )}
          </div>
        </div>

        <div className="h-[450px] overflow-y-auto p-6 space-y-3" ref={scrollRef}>
          <AnimatePresence mode="popLayout">
            {!isListening && captionHistory.length === 0 && (
              <motion.div
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                exit={{ opacity: 0, scale: 0.9 }}
                className={`flex flex-col items-center justify-center h-full ${
                  isDarkMode ? 'text-purple-300/50' : 'text-purple-600/50'
                }`}
              >
                <MessageSquare className="w-20 h-20 mb-4" />
                <p className="text-center">Click "Start Translation" to begin</p>
              </motion.div>
            )}

            {captionHistory.map((item, index) => (
              <motion.div
                key={index}
                layout
                initial={{ opacity: 0, y: 20, scale: 0.95 }}
                animate={{ opacity: 1, y: 0, scale: 1 }}
                exit={{ opacity: 0, scale: 0.95 }}
                transition={{ duration: 0.3 }}
                className={`p-4 rounded-2xl backdrop-blur-xl border ${
                  isDarkMode 
                    ? 'bg-white/5 border-white/10' 
                    : 'bg-white/50 border-blue-200/30'
                }`}
              >
                <div className={`text-xs font-medium mb-2 ${
                  isDarkMode ? 'text-blue-400' : 'text-blue-600'
                }`}>
                  {item.timestamp.toLocaleTimeString()}
                </div>
                <div className={`text-base leading-relaxed ${
                  isDarkMode ? 'text-white' : 'text-slate-900'
                }`}>
                  {item.original}
                </div>
              </motion.div>
            ))}

            {interimText && (
              <motion.div
                layout
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                className={`p-4 rounded-2xl border-2 border-dashed backdrop-blur-xl ${
                  isDarkMode 
                    ? 'bg-purple-500/10 border-purple-500/30' 
                    : 'bg-purple-50 border-purple-400/50'
                }`}
              >
                <div className={`text-xs font-medium mb-2 flex items-center gap-2 ${
                  isDarkMode ? 'text-purple-400' : 'text-purple-600'
                }`}>
                  <motion.div
                    animate={{ scale: [1, 1.2, 1] }}
                    transition={{ duration: 1, repeat: Infinity }}
                  >
                    <Sparkles className="w-3 h-3" />
                  </motion.div>
                  Speaking...
                </div>
                <div className={`text-base leading-relaxed ${
                  isDarkMode ? 'text-white/70' : 'text-slate-700'
                }`}>
                  {interimText}
                </div>
              </motion.div>
            )}
          </AnimatePresence>
        </div>
      </motion.div>

      {/* Translated Text */}
      <motion.div
        initial={{ opacity: 0, x: 30 }}
        animate={{ opacity: 1, x: 0 }}
        transition={{ duration: 0.5, delay: 0.3 }}
        className={`rounded-3xl backdrop-blur-2xl border overflow-hidden ${
          isDarkMode 
            ? 'bg-gradient-to-br from-purple-500/10 to-blue-500/10 border-purple-500/20 shadow-2xl shadow-purple-500/20' 
            : 'bg-gradient-to-br from-purple-50 to-blue-50 border-purple-200/50 shadow-2xl shadow-purple-500/20'
        }`}
      >
        <div className={`p-6 border-b ${
          isDarkMode ? 'border-purple-500/20' : 'border-purple-200/50'
        }`}>
          <div className="flex items-center gap-3">
            <div className={`p-2.5 rounded-xl ${
              isDarkMode 
                ? 'bg-purple-500/20 ring-1 ring-purple-500/30' 
                : 'bg-purple-100 ring-1 ring-purple-300/50'
            }`}>
              <Languages className={`w-5 h-5 ${
                isDarkMode ? 'text-purple-400' : 'text-purple-600'
              }`} />
            </div>
            <h3 className={`text-lg font-semibold ${
              isDarkMode ? 'text-white' : 'text-slate-900'
            }`}>
              Live Translation
            </h3>
          </div>
        </div>

        <div className="h-[450px] overflow-y-auto p-6 space-y-3">
          <AnimatePresence mode="popLayout">
            {!isListening && captionHistory.length === 0 && (
              <motion.div
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                exit={{ opacity: 0, scale: 0.9 }}
                className={`flex flex-col items-center justify-center h-full ${
                  isDarkMode ? 'text-purple-300/50' : 'text-purple-600/50'
                }`}
              >
                <Languages className="w-20 h-20 mb-4" />
                <p className="text-center">Translations will appear here</p>
              </motion.div>
            )}

            {captionHistory.map((item, index) => (
              <motion.div
                key={index}
                layout
                initial={{ opacity: 0, y: 20, scale: 0.95 }}
                animate={{ opacity: 1, y: 0, scale: 1 }}
                exit={{ opacity: 0, scale: 0.95 }}
                transition={{ duration: 0.3 }}
                className={`p-4 rounded-2xl backdrop-blur-xl ${
                  isDarkMode 
                    ? 'bg-white/10' 
                    : 'bg-white/70'
                }`}
              >
                <div className={`text-xs font-medium mb-2 ${
                  isDarkMode ? 'text-purple-400' : 'text-purple-600'
                }`}>
                  {item.timestamp.toLocaleTimeString()}
                </div>
                <div className={`text-base font-medium leading-relaxed ${
                  isDarkMode ? 'text-white' : 'text-slate-900'
                }`}>
                  {item.translated}
                </div>
              </motion.div>
            ))}

            {translatedText && (
              <motion.div
                layout
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                exit={{ opacity: 0, scale: 0.9 }}
                transition={{ type: "spring", bounce: 0.3 }}
                className={`p-6 rounded-2xl backdrop-blur-xl ${
                  isDarkMode 
                    ? 'bg-gradient-to-br from-purple-500/30 to-blue-500/30 ring-1 ring-purple-500/50' 
                    : 'bg-gradient-to-br from-purple-100 to-blue-100 ring-1 ring-purple-300/50'
                }`}
              >
                <div className={`text-xl font-semibold leading-relaxed ${
                  isDarkMode ? 'text-white' : 'text-slate-900'
                }`}>
                  {translatedText}
                </div>
              </motion.div>
            )}
          </AnimatePresence>
        </div>
      </motion.div>
    </div>
  );
}
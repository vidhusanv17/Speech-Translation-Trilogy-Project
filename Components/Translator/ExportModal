import React from "react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { FileText, FileCode } from "lucide-react";
import { motion } from "framer-motion";

export default function ExportModal({ isOpen, onClose, onExport, isDarkMode }) {
  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className={`rounded-3xl backdrop-blur-2xl border ${
        isDarkMode 
          ? 'bg-slate-950/95 border-purple-500/30' 
          : 'bg-white/95 border-purple-200/50'
      }`}>
        <DialogHeader>
          <DialogTitle className={`text-2xl font-bold ${
            isDarkMode ? 'text-white' : 'text-slate-900'
          }`}>
            Export Translation
          </DialogTitle>
          <DialogDescription className={`${
            isDarkMode ? 'text-purple-300' : 'text-purple-700'
          }`}>
            Choose your preferred export format
          </DialogDescription>
        </DialogHeader>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-6">
          <motion.div
            whileHover={{ scale: 1.03, y: -2 }}
            whileTap={{ scale: 0.98 }}
          >
            <Button
              onClick={() => onExport('txt')}
              className={`w-full h-36 flex flex-col items-center justify-center gap-4 rounded-2xl border-2 ${
                isDarkMode 
                  ? 'bg-white/5 hover:bg-white/10 border-blue-500/30 hover:border-blue-500/50' 
                  : 'bg-blue-50 hover:bg-blue-100 border-blue-300/50 hover:border-blue-400/50'
              } transition-all duration-200`}
              variant="outline"
            >
              <div className={`p-4 rounded-2xl ${
                isDarkMode 
                  ? 'bg-blue-500/20 ring-1 ring-blue-500/30' 
                  : 'bg-blue-100 ring-1 ring-blue-300/50'
              }`}>
                <FileText className={`w-8 h-8 ${
                  isDarkMode ? 'text-blue-400' : 'text-blue-600'
                }`} />
              </div>
              <div className={`${isDarkMode ? 'text-white' : 'text-slate-900'}`}>
                <div className="font-semibold text-lg">Text File</div>
                <div className={`text-xs mt-1 ${
                  isDarkMode ? 'text-blue-300' : 'text-blue-600'
                }`}>
                  .txt format
                </div>
              </div>
            </Button>
          </motion.div>

          <motion.div
            whileHover={{ scale: 1.03, y: -2 }}
            whileTap={{ scale: 0.98 }}
          >
            <Button
              onClick={() => onExport('srt')}
              className={`w-full h-36 flex flex-col items-center justify-center gap-4 rounded-2xl border-2 ${
                isDarkMode 
                  ? 'bg-white/5 hover:bg-white/10 border-purple-500/30 hover:border-purple-500/50' 
                  : 'bg-purple-50 hover:bg-purple-100 border-purple-300/50 hover:border-purple-400/50'
              } transition-all duration-200`}
              variant="outline"
            >
              <div className={`p-4 rounded-2xl ${
                isDarkMode 
                  ? 'bg-purple-500/20 ring-1 ring-purple-500/30' 
                  : 'bg-purple-100 ring-1 ring-purple-300/50'
              }`}>
                <FileCode className={`w-8 h-8 ${
                  isDarkMode ? 'text-purple-400' : 'text-purple-600'
                }`} />
              </div>
              <div className={`${isDarkMode ? 'text-white' : 'text-slate-900'}`}>
                <div className="font-semibold text-lg">Subtitle File</div>
                <div className={`text-xs mt-1 ${
                  isDarkMode ? 'text-purple-300' : 'text-purple-600'
                }`}>
                  .srt format
                </div>
              </div>
            </Button>
          </motion.div>
        </div>
      </DialogContent>
    </Dialog>
  );
}